import{ar as p,an as d,ao as m}from"./index-Dadon9p0.js";import{GLTFLoader as u}from"./glTFLoader-BXWB19V0.js";import"./index-aONEAEbQ.js";import"./svelte/svelte.js";import"./bone-BDN5pB_t.js";import"./rawTexture-CElBQm_C.js";import"./assetContainer-B81Ra6MI.js";import"./objectModelMapping-RR8LOlJM.js";const n="KHR_materials_anisotropy";class y{constructor(s){this.name=n,this.order=195,this._loader=s,this.enabled=this._loader.isExtensionUsed(n)}dispose(){this._loader=null}loadMaterialPropertiesAsync(s,o,r){return u.LoadExtensionAsync(s,o,this.name,(t,e)=>{const i=new Array;return i.push(this._loader.loadMaterialPropertiesAsync(s,o,r)),i.push(this._loadIridescencePropertiesAsync(t,e,r)),Promise.all(i).then(()=>{})})}_loadIridescencePropertiesAsync(s,o,r){if(!(r instanceof p))throw new Error(`${s}: Material type not supported`);const t=new Array;return r.anisotropy.isEnabled=!0,r.anisotropy.intensity=o.anisotropyStrength??0,r.anisotropy.angle=o.anisotropyRotation??0,o.anisotropyTexture&&(o.anisotropyTexture.nonColorData=!0,t.push(this._loader.loadTextureInfoAsync(`${s}/anisotropyTexture`,o.anisotropyTexture,e=>{e.name=`${r.name} (Anisotropy Intensity)`,r.anisotropy.texture=e}))),Promise.all(t).then(()=>{})}}d(n);m(n,!0,a=>new y(a));export{y as KHR_materials_anisotropy};
//# sourceMappingURL=KHR_materials_anisotropy-psKtkQFA.js.map
